Class cmpNEQ
    Attribute VB_Name = "cmpNEQ"
    Attribute VB_GlobalNameSpace = False
    Attribute VB_Creatable = True
    Attribute VB_PredeclaredId = True
    Attribute VB_Exposed = True
    Option Explicit


    Implements IComparer

    Const MY_TYPENAME                       As Variant = "cmpNEQ"

    Private Type State

        Item                                As Variant
        Index                               As Variant
        
    End Type

    Private s                               As State
    
    
    Public Function ExecCmp(ByRef ipHostItem As Variant) As Boolean Implements IComparer.ExecCmp
            
        If VBA.IsMissing(s.Index) Or VBA.IsEmpty(s.Index) Then
            ExecCmp = ipHostItem <> s.Item
        End If
    
        If ((Not VBA.IsObject(ipHostItem)) And (VBA.VarType(ipHostItem) = vbString)) Then
            
            Return VBA.Mid(ipHostItem, s.Index, 1) <> s.Item
            
            
        Else
            
            Return ipHostItem(s.Index) <> s.Item
            
        
        End If
        
    End Function

    '@DefaultMember
    Public Function Deb(ByVal ipItem As Variant, Optional ByVal ipIndex As Variant) As cmpNEQ
        With New cmpNEQ
            Set Deb = .ConstructInstance(ipItem, ipIndex)
        End With
    End Function


    Friend Function ConstructInstance(ByVal ipItem As Variant, ByVal ipIndex As Variant) As cmpNEQ
        s.Item = ipItem
        s.Index = ipIndex
        Set ConstructInstance = Me
    End Function

    Public Property Get TYpeName() As String Implements IComparer.TypeName
        Return MY_TYPENAME
    End Property

    Public Property Get It() As Variant Implements IComparer.It
    	Return s.Item
    End Property
    
    Public Property Get Index() As Long Implements IComparer.Index
        Return s.Index
    End Property
    
End Class
