Module Helpers

	Option Explicit
     
    Public Function ToVA(ParamArray ipParamArray() As Variant) As varArray
        
        If ArrayInfo.IsNotAllocated(ipParamArray) Then
            Return Nothing
        End If
        
        Dim myArray As varArray = New varArray
        myArray.Cargo = CVar(ipParamArray)
        Return myArray
        
    End Function
    
    '@Description("Replacement for Paramarray")
    Public Function ToLA(ByRef ipArray As Variant) As ListArray
    
        If ArrayInfo.IsNotListArray(ipArray) Then
            Err.Raise 17 + vbObjectError, "Helpers.ToLA", "List arrays cannot have more than one dimension"
        End If
        
        Return ListArray.Deb(ipArray)
        
    End Function

    ' ' This type is used to eliminate the variants in the overloaded ArrayList Deb method.
    ' Public Type vFE
    '     Cargo As variant
    ' End Type

    ' Private Function ToCharArray(ByVal ipString As String) As Variant

    '     Dim myArray As Variant
    '     ReDim myArray(0 To VBA.Len(ipString) - 1)

    '     Dim myIndex As Long
    '     For myIndex = 1 To VBA.Len(ipString)
    '         myArray(myIndex - 1) = VBA.Mid$(ipString, myIndex, 1)
    '     Next
    '     Return myArray
    ' End Function

    ' Public Function ToVFE(ByRef ipForEach As Variant) As vFE

    '     Dim myVFE As vFE
    '     Dim myPPA As ParsedPA = ParsedPA(ipForEach, ParseType.ToForEach)
        
    '     Select Case True

    '         Case myPPA.IsString
        	
    '             myVFE.Cargo = myPPA.Cargo


    '         Case myPPA.IsItem

    '             myVFE.Cargo = Array(myPPA.Cargo)


    '         Case VBA.IsArray(myPPA.Cargo)

    '             myVFE.Cargo = myPPA.Cargo


    '         Case Else

    '             Set myVFE.Cargo = myPPA.Cargo
                

    '     End Select

    '     Return myVFE
            
    ' End Function

End Module